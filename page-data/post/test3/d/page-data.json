{"componentChunkName":"component---src-components-templates-post-jsx","path":"/post/test3/d/","result":{"data":{"markdownRemark":{"html":"<h3>프로퍼티</h3>\n<ul>\n<li>String.length <br/> 문자열 내의 문자 갯수를 반환 = <code>내용</code>과 <code>길이</code>를 소유하고 있으니 <code>유사 배열 객체</code>이다.</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"66261635550083930000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = 'hello'\r\nconsole.log(str.length) // 5`, `66261635550083930000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 5</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th>String.fromCharCode()</th>\n<th>쉼표로 구분되는 일련의 유니코드에 해당하는 문자들로 구성된 문자열을 반환함.</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String.fromCodePoint()</td>\n<td>쉼표로 구분되는 일련의 코드 포인트(code point)에 해당하는 문자들로 구성된 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>String.raw()</td>\n<td>템플릿 문자열(template string)의 원형을 반환함.</td>\n</tr>\n<tr>\n<td>indexOf()</td>\n<td>String 인스턴스에서 특정 문자나 문자열이 처음으로 등장하는 위치의 인덱스를 반환함.</td>\n</tr>\n<tr>\n<td>lastIndexOf()</td>\n<td>String 인스턴스에서 특정 문자나 문자열이 마지막으로 등장하는 위치의 인덱스를 반환함.</td>\n</tr>\n<tr>\n<td>charAt()</td>\n<td>String 인스턴스에서 전달받은 인덱스에 위치한 문자를 반환함.</td>\n</tr>\n<tr>\n<td>charCodeAt()</td>\n<td>String 인스턴스에서 전달받은 인덱스에 위치한 문자의 UTF-16 코드를 반환함. (0 ~ 65535)</td>\n</tr>\n<tr>\n<td>charPointAt()</td>\n<td>String 인스턴스에서 전달받은 인덱스에 위치한 문자의 유니코드 코드 포인트(unicode code point)를 반환함.</td>\n</tr>\n<tr>\n<td>slice()</td>\n<td>String 인스턴스에서 전달받은 시작 인덱스부터 종료 인덱스 바로 앞까지의 문자열을 추출한 새 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>substring()</td>\n<td>String 인스턴스에서 전달받은 시작 인덱스부터 종료 인덱스 바로 앞까지의 문자열을 추출한 새 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>substr()</td>\n<td>String 인스턴스에서 전달받은 시작 인덱스부터 길이만큼의 문자열을 추출한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>split()</td>\n<td>String 인스턴스에서 구분자(separator)를 기준으로 나눈 후, 나뉜 문자열을 하나의 배열로 반환함.</td>\n</tr>\n<tr>\n<td>concat()</td>\n<td>String 인스턴스에 전달받은 문자열을 결합한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>toUpperCase()</td>\n<td>String 인스턴스의 모든 문자를 대문자로 변환한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>toLowerCase()</td>\n<td>String 인스턴스의 모든 문자를 소문자로 변환한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>trim()</td>\n<td>String 인스턴스의 양 끝에 존재하는 공백과 모든 줄 바꿈 문자(LF, CR 등)를 제거한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>search()</td>\n<td>인수로 전달받은 정규 표현식에 맞는 문자나 문자열이 처음으로 등장하는 위치의 인덱스를 반환함.</td>\n</tr>\n<tr>\n<td>replace()</td>\n<td>인수로 전달받은 패턴에 맞는 문자열을 대체 문자열로 변환한 새 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>match()</td>\n<td>인수로 전달받은 정규 표현식에 맞는 문자열을 찾아서 하나의 배열로 반환함.</td>\n</tr>\n<tr>\n<td>includes()</td>\n<td>인수로 전달받은 문자나 문자열이 포함되어 있는지를 검사한 후 그 결과를 불리언 값으로 반환함.</td>\n</tr>\n<tr>\n<td>startsWith()</td>\n<td>인수로 전달받은 문자나 문자열로 시작되는지를 검사한 후 그 결과를 불리언 값으로 반환함.</td>\n</tr>\n<tr>\n<td>endsWith()</td>\n<td>인수로 전달받은 문자나 문자열로 끝나는지를 검사한 후 그 결과를 불리언 값으로 반환함.</td>\n</tr>\n<tr>\n<td>toLocaleUpperCase()</td>\n<td>영문자뿐만 아니라 모든 언어의 문자를 대문자로 변환한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>toLocaleLowerCase()</td>\n<td>영문자뿐만 아니라 모든 언어의 문자를 소문자로 변환한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>localeCompare()</td>\n<td>인수로 전달받은 문자열과 정렬 순서로 비교하여 그 결과를 정수 값으로 반환함.</td>\n</tr>\n<tr>\n<td>normalize()</td>\n<td>해당 문자열의 유니코드 표준화 양식(Unicode Normalization Form)을 반환함.</td>\n</tr>\n<tr>\n<td>repeat()</td>\n<td>해당 문자열을 인수로 전달받은 횟수만큼 반복하여 결합한 새로운 문자열을 반환함.</td>\n</tr>\n<tr>\n<td>toString()</td>\n<td>String 인스턴스의 값을 문자열로 반환함.</td>\n</tr>\n<tr>\n<td>valueOf()</td>\n<td>String 인스턴스의 값을 문자열로 반환함.</td>\n</tr>\n</tbody>\n</table>\n<br>\n<ul>\n<li>String.prototype.charAt(number) : String<br>파라미터로 전달한 index 위치에 해당하는 문자 반환.<br><br><code>0 ~ (length - 1)</code> 까지만 가능. 음수 지원 안됨.</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"29115476239700988000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = 'hello'\r\nconsole.log(str.charAt(4)) // 'o'`, `29115476239700988000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'o'</span></code></pre></div>\n<br>\n<ul>\n<li>String.prototype.indexOf(searchString, fromIndex) : number<br>인수로 전달한 문자 또는 문자열을 대상하는 문자열에서 검색해 처음 발견된 곳의 index 반환, 발견 못하면 <code>-1</code><br><br><code>fromIndex</code> 없이 전달하면 처음부터, 같이 전달하면 <code>fromIndex</code> 부터</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"22532830877625430000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = 'hello world'\r\nconsole.log(str.indexOf('wo')) // 6\r\nconsole.log(str.indexOf('wo'), 8) // -1 \r\n// 8 부터는 'wo'가 없다.`, `22532830877625430000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 6</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -1 </span>\r\n<span class=\"token comment\">// 8 부터는 'wo'가 없다.</span></code></pre></div>\n<br>\n<ul>\n<li>String.prototype.lastIndexOf(searchString, fromIndex) : number<br>위 <code>indexOf</code> 와 동일하지만 검색 방향이 <code>역방향</code> 즉, 뒤에서 앞으로 찾는다.</li>\n</ul>\n<br>\n<ul>\n<li>String.prototype.replace(searchValue, replaceValue) : string<br><code>searchValue</code> 를 문자열에서 찾아 <code>replaceValue</code> 로 대체시켜 반환.<br><br>첫 발견한 문자열만 대체된다.\n<ul>\n<li><code>searchValue</code> 문자 or 정규 표현식</li>\n<li><code>replaceValue</code> 문자 or 콜백함수</li>\n</ul>\n</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"10639398177335590000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = 'hello world'\r\n\r\nstr.replace('world', 'javascript') // 'hello javascript'\r\nstr.replace('world', '**\\$&**') // 'hello **world**'`, `10639398177335590000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span>\r\n\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'hello javascript'</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'**$&amp;**'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'hello **world**'</span></code></pre></div>\n<ul>\n<li>regex 교체 패</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>$`</th>\n<th>일치한 문자 이전 값 참조</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$'</td>\n<td>일치한 문자 이후 값 참조</td>\n</tr>\n<tr>\n<td>$+</td>\n<td>마지막으로 캡처된 값 참조</td>\n</tr>\n<tr>\n<td>$&#x26;</td>\n<td>일치한 문자 결과 전체 참조</td>\n</tr>\n<tr>\n<td>$_</td>\n<td>입력(input)된 문자 전체 참조</td>\n</tr>\n<tr>\n<td>$1~9</td>\n<td>캡처(Capture)된 값 참조</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>regex</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>replace(' ','')</th>\n<th>첫번째 공백 제거</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>replace(/-/g,'')</td>\n<td>특정문자 제거1 (-)</td>\n</tr>\n<tr>\n<td>replace(/,/g,'')</td>\n<td>특정문자 제거2 (,)</td>\n</tr>\n<tr>\n<td>replace(/^\\s+/,'')</td>\n<td>앞의 공백 제거</td>\n</tr>\n<tr>\n<td>replace(/\\s+$/,'')</td>\n<td>뒤의 공백 제거</td>\n</tr>\n<tr>\n<td>replace(/^\\s+</td>\n<td>\\s+$/g,'')</td>\n</tr>\n<tr>\n<td>replace(/\\s/g,'')</td>\n<td>문자열 내의 모든 공백 제거</td>\n</tr>\n<tr>\n<td>replace(/\\n/g,'')</td>\n<td>n개행 제거</td>\n</tr>\n<tr>\n<td>replace(/\\r/g,'')</td>\n<td>엔터 제거</td>\n</tr>\n</tbody>\n</table>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"90336439284383830000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`str.replace(/[a-zA-Z]/g,(n) => {return n === n.toUpperCase() ? n.toLowerCase() :  n.toUpperCase()})`, `90336439284383830000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[a-zA-Z]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> n <span class=\"token operator\">===</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>  n<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<ul>\n<li>String.prototype.split(separator, limit) : string[]<br><code>separator</code> 를 기준으로 분리된 각 문자열로 이루어진 배열을 반환.<br><br>인수가 없거나 해당하는 문자가 없다면 원본에 배열을 씌워 반환.</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"27662858119423218000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = 'hello world, hello javascript\r\nstr.split(' ')    // ['hello', 'world,', 'hello', 'javascript']\r\nstr.split('')     // ['h', 'e', 'l', 'l', 'o', ' ', 'w', ... ] 모두 분리\r\nstr.split('')     // ['hello world, hello javascript']\r\nstr.split(' ', 2) // ['hello', 'world,']\r\nstr.split('l')    // ['he', '', 'o wor', 'd, he', '', 'o javascript']`, `27662858119423218000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> 'hello world<span class=\"token punctuation\">,</span> hello javascript\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// ['hello', 'world,', 'hello', 'javascript']</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// ['h', 'e', 'l', 'l', 'o', ' ', 'w', ... ] 모두 분리</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// ['hello world, hello javascript']</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['hello', 'world,']</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// ['he', '', 'o wor', 'd, he', '', 'o javascript']</span></code></pre></div>\n<br>\n<ul>\n<li>String.prototype.substring(start, end) : string<br><code>start</code> 부터 <code>end</code> 바로 앞 문자까지를 문자열로 전달한다.<br></li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"69328189683709240000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = 'ABCDEFG\r\nstr.substring(2, 5) // 'CDE'\r\nstr.substring(5, 2) // 'CDE' 반대로 넣어도 자동 교환\r\nstr.substring(3)    // 'DEFG' end 인수가 없으면 끝까지 잘라냄\r\nstr.substring(-2)   // -1, NaN 과 같은 음수는 0으로 취`, `69328189683709240000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> '<span class=\"token constant\">ABCDEFG</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'CDE'</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'CDE' 반대로 넣어도 자동 교환</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 'DEFG' end 인수가 없으면 끝까지 잘라냄</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// -1, NaN 과 같은 음수는 0으로 취</span></code></pre></div>\n<br>\n<ul>\n<li>String.prototype.slice(start, end) : string<br><code>substring</code> 과 같으나 음수 인수 전달이 안됨.</li>\n</ul>\n<br>\n<ul>\n<li>String.prototype.toLowerCase() : string</li>\n<li>String.prototype.toUpperCase() : string<br>문자열의 모든 문자를 소문자, 대문자로 변경한다.</li>\n</ul>\n<br>\n<ul>\n<li>String.prototype.trim() : string<br>문자열의 양 끝 공백문자를 제거한다.</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"83492089905273950000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = '   javascript '\r\n\r\nstr.trim() // 'javascript'`, `83492089905273950000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'   javascript '</span>\r\n\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'javascript'</span></code></pre></div>\n<br>\n<ul>\n<li>String.prototype.repeat(number) : string<br>인수로 전달한 숫자 만큼 반복한 문자열을 반환.</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"40617692621259630000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"copied!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const str = 'hello'\r\n\r\nstr.repeat(0)   // ''\r\nstr.repeat(2)   // 'hellohello'\r\nstr.repeat(2.5) // 'hellohello'`, `40617692621259630000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\r\n\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// ''</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 'hellohello'</span>\r\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'hellohello'</span></code></pre></div>\n<br>\n<ul>\n<li>String.prototype.includes(searchValue, position) : boolean<br><code>searchValue</code> 문자열이 포함되어 있는지 검사 후 boolean으로 반환.</li>\n</ul>","frontmatter":{"title":"어바웃 String","categories":["javascript","string","공부"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#9848f8","images":{"fallback":{"src":"/static/e6105addb75afdc60f975beda8baecee/fc7c7/thumbnail.png","srcSet":"/static/e6105addb75afdc60f975beda8baecee/9c5e1/thumbnail.png 192w,\n/static/e6105addb75afdc60f975beda8baecee/3d394/thumbnail.png 384w,\n/static/e6105addb75afdc60f975beda8baecee/fc7c7/thumbnail.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/e6105addb75afdc60f975beda8baecee/abff3/thumbnail.webp 192w,\n/static/e6105addb75afdc60f975beda8baecee/6da84/thumbnail.webp 384w,\n/static/e6105addb75afdc60f975beda8baecee/c7cae/thumbnail.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":500}}}}}},"pageContext":{"slug":"/test3/d/"}},"staticQueryHashes":[],"slicesMap":{}}