{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"블로그를 시작한 이유, 개츠비?"},"fields":{"index":"{\"title\":\"블로그를 시작한 이유, 개츠비?\",\"content\":\"\\r\\n### 블로그 시작\\r\\n--- \\r\\n블로그를 시작하기로 했다. 사실 그렇게 거창한 이유가 있다거나 하지는 않다. \\r\\n\\r\\n백엔드에서 프론트로 내 개발 방향을 바꾸고 나니 걱정이 하나 생겼기 때문이다. 앞으로 내가 무엇을 보여 주어야 할지가 걱정되었다. SSAFY에서 진행한 프로젝트가 몇 가지 있지만 따로 출판하거나 하지 않았기에 걱정이 되었다. \\r\\n\\r\\n딥러닝 모델을 사용하거나 백엔드에서 해야 할 일이 많아 서버가 없다면 제대로 작동하지 않을 프론트를 보여줘야 하니 말이다. 그렇게 고민하다가 블로그를 시작하려 여러 방법을 찾아보았다.\\r\\n\\r\\n### Gatsby?\\r\\n---\\r\\n여러 가지 블로그 플랫폼이 있다. \\r\\n`티스토리` `워드프레스` `벨로그` 등 다양한 플랫폼이 있지만 어느 하나도 마음에 쏙 들지는 않았다. 간편한 기능을 통해 블로그를 만들 수 있어도 간편함 / 자유로움 이 반비례하는 덕에 제한이 꼭 있었다. \\r\\n\\r\\n그렇게 찾다 보니 github 블로그가 있지 않은가? \\r\\ngithub 블로그는 직접 개발해야 하는 블로그이다. ( 물론 템플릿을 써도 된다. 하지만 블로그마저 다른 이의 힘을 빌려 만드는 것은 자존심이 허락하지 않았다. ) 이 github.io 로 끝나는 블로그들의 프레임워크도 여러 가지가 있다.\\r\\n\\r\\n![](./20231025202018.png)\\r\\n<center>(https://www.reddit.com/r/webdev/comments/b0j9rs/infographic_gatsby_vs_hugo_vs_jekyll/)</center>\\r\\n\\r\\nRuby, Go, JavaScript 3가지 언어 선택이 가능한데... 당연히 내가 프론트로 노선을 바꾼 후 배운 것이라고는 JS뿐인 React라니 완벽했다. 나에게는 Gatsby의 압승이다. 거기에 다양한 플러그인이 있으니 싱글벙글 웃음마저 나온다.\\r\\n\\r\\n### 템플릿\\r\\n---\\r\\n![](./20231025202540.png)\\r\\n<center>(https://github.com/christiandavid/gatsby-theme-byfolio)</center>\\r\\n\\r\\n보는 바와 같이 Gatsby에도 다양한 테마 템플릿이 존재한다. 하지만 나는 결심했다. 진정한 프론트 개발자가 되어 보기로. 모든 것을 부딪쳐 가며 직접 배워보고 싶었다.\\r\\n\\r\\n![](./20231025202732.png)\\r\\n<center>(https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-hello-world)</center>\\r\\n\\r\\nGatsby에서 제공하는 `Hello world!` 테마는 정말 실행했을 때 'Hello world!' 외에는 아무것도 없다. 이 얼마나 깔끔한 템플릿이란 말인가.. 아마 내가 이때 다른 화려한 템플릿을 선택했더라면 지금만큼 Gatsby를 잘 활용하지는 못했을 것 같다. Gatsby 모든 것들을 처음부터 직접 써 내려갔으니 더욱 많은 것들이 남았다.\\r\\n\\r\\n### 마치며\\r\\n---\\r\\n다음 글 에서는 Gatsby를 활용하여 첫 페이지를 만드는 법을 알아본다.\",\"categories\":[\"gatsby\",\"diary\"],\"description\":\"블로그를 시작한 간략한 이유와 함께 왜 하필 Gatsby를 선택하였는지에 대하여\",\"slug\":\"/gatsby-my-first-blog/paper/\"}"}}},{"node":{"frontmatter":{"title":"마크업, 마크다운"},"fields":{"index":"{\"title\":\"마크업, 마크다운\",\"content\":\"\\r\\n### 인트로\\r\\n---\\r\\n프론트엔드를 공부하기 시작하면서 생긴 html에 대한 궁금증을 해결하기 위해 우선 마크업 언어가 무엇인지. 우리가 github 에서 작성하는 [README.md](http://README.md) 의 마크다운은 무엇인지 위키를 통해 알아보고자 한다.\\r\\n\\r\\n### Markup Language\\r\\n---\\r\\n> **마크업 언어**(markup 言語, markup language)는 [태그](https://ko.wikipedia.org/wiki/%ED%83%9C%EA%B7%B8_(%EC%A0%95%EB%B3%B4)) 등을 이용하여 문서나 데이터의 구조를 명기하는 언어의 한 가지이다.\\r\\n> \\r\\n> 태그는 원래 텍스트와는 별도로 원고의 교정부호와 주석을 표현하기 위한 것이었으나 용도가 점차 확장되어 문서의 구조를 표현하는 역할을 하게 되었다. 이러한 태그 방법의 체계를 마크업 언어라 한다.\\r\\n\\r\\n- **표현적 마크업**(Presentational markup): 전통적인 워드 처리 시스템이 사용하는 마크업. [위지위그](https://ko.wikipedia.org/wiki/%EC%9C%84%EC%A7%80%EC%9C%84%EA%B7%B8) 효과를 내는 문서 텍스트에 포함되니 이진 코드. 이러한 마크업은 사람(저자나 편집자도 포함)의 눈에는 보이지 않도록 설계되는 것이 일반적이다.\\r\\n- **절차적 마크업**(Procedural markup): 마크업은 텍스트에 포함되며 문자를 처리할 프로그램의 명령을 제공한다. [troff](https://ko.wikipedia.org/w/index.php?title=Troff&action=edit&redlink=1), [LaTeX](https://ko.wikipedia.org/wiki/LaTeX), [포스트스크립트](https://ko.wikipedia.org/wiki/%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8)를 예로 들 수 있다.\\r\\n- **기술적 마크업**(Descriptive markup): 마크업은 문서의 일부에 이름을 다는 데 사용된다. 예로, HTML의 인용의 이름을 다는 `<cite>`  태그를 들 수 있다.\\r\\n\\r\\n다음과 같은 예시를 볼 수 있다.\\r\\n- **HTML (Hyper Text Markup Language)**: 웹 페이지를 작성하기 위해 사용하는 가장 널리 알려진 마크업 언어. HTML은 웹 페이지의 구조를 정의하고, 텍스트, 이미지, 링크 등 다양한 요소를 웹 페이지에 배치할 수 있도록 한다.\\r\\n- **XML (eXtensible Markup Language)**: 데이터를 저장하고 전송하는 데 사용되는 마크업 언어. XML은 데이터를 구조화하는 데 사용되며, 태그는 사용자가 정의할 수 있다.\\r\\n- **SVG (Scalable Vector Graphics)**: 벡터 기반의 그래픽을 표현하기 위한 XML 기반의 마크업 언어. SVG는 웹에서 스케일링이 가능한 그래픽을 만드는 데 사용된다.\\r\\n\\r\\n### Markdown?\\r\\n--- \\r\\n> **마크다운**(Markdown)은 [일반 텍스트](https://ko.wikipedia.org/wiki/%ED%94%8C%EB%A0%88%EC%9D%B8_%ED%85%8D%EC%8A%A4%ED%8A%B8) 기반의 경량 [마크업 언어](https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EC%97%85_%EC%96%B8%EC%96%B4)다. 일반 텍스트로 서식이 있는 문서를 작성하는 데 사용되며, 일반 마크업 언어에 비해 문법이 쉽고 간단한 것이 특징이다. [HTML](https://ko.wikipedia.org/wiki/HTML)과 [리치 텍스트](https://ko.wikipedia.org/wiki/%EB%A6%AC%EC%B9%98_%ED%85%8D%EC%8A%A4%ED%8A%B8)(RTF) 등 서식 문서로 쉽게 변환되기 때문에 [응용 소프트웨어](https://ko.wikipedia.org/wiki/%EC%9D%91%EC%9A%A9_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4)와 함께 배포되는 [README 파일](https://ko.wikipedia.org/wiki/%EB%A6%AC%EB%93%9C%EB%AF%B8)이나 온라인 게시물 등에 많이 사용된다.\\r\\n\\r\\n- **읽기 쉽고 작성하기 쉽다**: 마크다운의 문법은 간단하고 직관적, 일반 텍스트를 읽고 쓰는 것처럼 쉽게 서식 있는 텍스트를 작성할 수 있다.\\r\\n- **다양한 플랫폼에서 지원한다**: GitHub, Bitbucket, GitLab 등의 코드 호스팅 플랫폼뿐만 아니라, Jekyll, Hugo 등의 정적 사이트 생성기, StackOverflow, Reddit 등의 커뮤니티 사이트에서도 마크다운을 지원한다.\\r\\n- **HTML로 쉽게 변환할 수 있다**: 마크다운 문서는 쉽게 HTML로 변환할 수 있으므로, 웹 사이트에 게시하거나 이메일로 보내는 등 다양한 용도로 사용할 수 있다.\\r\\n\\r\\n### 마치며\\r\\n---\\r\\n그렇다 이 글도 마크다운으로 작성하고 있다.\",\"categories\":[\"web\"],\"description\":\"html은 프로그래밍 언어가 아니다. 그럼 뭐란 말인가?\",\"slug\":\"/what-is-mark-up-lang/paper/\"}"}}},{"node":{"frontmatter":{"title":"시맨틱 마크업."},"fields":{"index":"{\"title\":\"시맨틱 마크업.\",\"content\":\"\\r\\n# 시멘틱 마크업\\r\\n\\r\\n생성일: August 31, 2023 5:20 PM\\r\\n카테고리: 컨셉\\r\\n태그: html, markup language, semantic\\r\\n\\r\\n### 인트로\\r\\n\\r\\n평소 html을 작성할 때 div를 난무하지 말라는 말을 많이 들었다. 바로 옆 친구의 12단 div를 보고 왜 하지 말라는 것인지 이해했다. 그럼 div를 적게 쓰는 것보다 더 가시 성이 뛰어난 방법은 무엇일까? 다른 친구가 시멘틱 마크업에 대해 알려주었다. 한번 알아보자.\\r\\n\\r\\n### HTML Semantic Markup\\r\\n\\r\\n> **[semantic](https://en.dict.naver.com/#/entry/enko/74453940307f4c45ba76b0aa988fc5c3)**\\r\\n> \\r\\n> 미국∙영국*[sɪˈmæntɪk]*\\r\\n> \\r\\n> **형용사**\\r\\n> : 의미의, 의미론적인\\r\\n> \\r\\n\\r\\n![](./semantic.png)\\r\\n\\r\\n의미론적인? 단어만 보았을 때는 바로 이해가 되지 않는다. 하지만 바로 위 그림의 우측 예를 보았다면 각 태그가 의미하는 뜻 그대로 각 부분을 구성 하는 것이라고 이해할 수 있을 것이다.\\r\\n\\r\\n머릿말 `<header>` , 네비게이션 `<nav>` , 메인 컨텐츠 `<main>` 그리고 그 안에 나누어진 `<section>` `<article>` 이 들어가며 메인 컨텐츠와 간접적으로 연관된 부분을 `<aside>` 로 나타낸다. 당연히 최하단은 `<footer>` .\\r\\n\\r\\n`<section>` `<article>` 은 헷갈리기 쉬운데 `<section>` 은 서로 연관되어 있지만 나누어야 할 때, `<article>` 은 서로 관계없이 독자적으로 서로 구분할 때 사용한다고 이해했다.\\r\\n\\r\\n```html\\r\\n<section>\\r\\n  ref.\\r\\n\\t<article>논문 1</article>\\r\\n  <article>논문 2</article>\\r\\n</section>\\r\\n\\r\\n<article>\\r\\n\\t작성자 프로필\\r\\n\\t<section>정보</section>\\r\\n\\t<section>연락처</section>\\r\\n\\t<section>작성글</section>\\r\\n</article>\\r\\n```\",\"categories\":[\"web\"],\"description\":\"당신도 12단 div를 쌓아두고 개발하는가? 요소는 이름으로 자신의 역할을 설명해야한다.\",\"slug\":\"/what-is-semantic-markup/paper/\"}"}}},{"node":{"frontmatter":{"title":"마크다운 치트시트"},"fields":{"index":"{\"title\":\"마크다운 치트시트\",\"content\":\"\\r\\nThis is intended as a quick reference and showcase. For more complete info, see [John Gruber's original spec](http://daringfireball.net/projects/markdown/) and the [Github-flavored Markdown info page](http://github.github.com/github-flavored-markdown/).\\r\\n\\r\\nNote that there is also a [Cheatsheet specific to Markdown Here](./Markdown-Here-Cheatsheet) if that's what you're looking for. You can also check out [more Markdown tools](./Other-Markdown-Tools).\\r\\n\\r\\n##### Table of Contents  \\r\\n[Headers](#headers)  \\r\\n[Emphasis](#emphasis)  \\r\\n[Lists](#lists)  \\r\\n[Links](#links)  \\r\\n[Images](#images)  \\r\\n[Code and Syntax Highlighting](#code)  \\r\\n[Footnotes](#footnotes)  \\r\\n[Tables](#tables)  \\r\\n[Blockquotes](#blockquotes)  \\r\\n[Inline HTML](#html)  \\r\\n[Horizontal Rule](#hr)  \\r\\n[Line Breaks](#lines)  \\r\\n[YouTube Videos](#videos)  \\r\\n\\r\\n## Headers\\r\\n\\r\\n```no-highlight\\r\\n# H1\\r\\n## H2\\r\\n### H3\\r\\n#### H4\\r\\n##### H5\\r\\n###### H6\\r\\n\\r\\nAlternatively, for H1 and H2, an underline-ish style:\\r\\n\\r\\nAlt-H1\\r\\n======\\r\\n\\r\\nAlt-H2\\r\\n------\\r\\n```\\r\\n\\r\\n# H1\\r\\n## H2\\r\\n### H3\\r\\n#### H4\\r\\n##### H5\\r\\n###### H6\\r\\n\\r\\nAlternatively, for H1 and H2, an underline-ish style:\\r\\n\\r\\nAlt-H1\\r\\n======\\r\\n\\r\\nAlt-H2\\r\\n------\\r\\n\\r\\n## Emphasis\\r\\n\\r\\n```no-highlight\\r\\nEmphasis, aka italics, with *asterisks* or _underscores_.\\r\\n\\r\\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\\r\\n\\r\\nCombined emphasis with **asterisks and _underscores_**.\\r\\n\\r\\nStrikethrough uses two tildes. ~~Scratch this.~~\\r\\n```\\r\\n\\r\\nEmphasis, aka italics, with *asterisks* or _underscores_.\\r\\n\\r\\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\\r\\n\\r\\nCombined emphasis with **asterisks and _underscores_**.\\r\\n\\r\\nStrikethrough uses two tildes. ~~Scratch this.~~\\r\\n\\r\\n## Lists\\r\\n\\r\\n(In this example, leading and trailing spaces are shown with with dots: ⋅)\\r\\n\\r\\n```no-highlight\\r\\n1. First ordered list item\\r\\n2. Another item\\r\\n⋅⋅* Unordered sub-list. \\r\\n1. Actual numbers don't matter, just that it's a number\\r\\n⋅⋅1. Ordered sub-list\\r\\n4. And another item.\\r\\n\\r\\n⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\\r\\n\\r\\n⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\\r\\n⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅\\r\\n⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\\r\\n\\r\\n* Unordered list can use asterisks\\r\\n- Or minuses\\r\\n+ Or pluses\\r\\n```\\r\\n\\r\\n1. First ordered list item\\r\\n2. Another item\\r\\n  * Unordered sub-list. \\r\\n1. Actual numbers don't matter, just that it's a number\\r\\n  1. Ordered sub-list\\r\\n4. And another item.\\r\\n\\r\\n   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\\r\\n\\r\\n   To have a line break without a paragraph, you will need to use two trailing spaces.  \\r\\n   Note that this line is separate, but within the same paragraph.  \\r\\n   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\\r\\n\\r\\n* Unordered list can use asterisks\\r\\n- Or minuses\\r\\n+ Or pluses\\r\\n\\r\\n## Links\\r\\n\\r\\nThere are two ways to create links.\\r\\n\\r\\n```no-highlight\\r\\n[I'm an inline-style link](https://www.google.com)\\r\\n\\r\\n[I'm an inline-style link with title](https://www.google.com \\\"Google's Homepage\\\")\\r\\n\\r\\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\\r\\n\\r\\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\\r\\n\\r\\n[You can use numbers for reference-style link definitions][1]\\r\\n\\r\\nOr leave it empty and use the [link text itself].\\r\\n\\r\\nURLs and URLs in angle brackets will automatically get turned into links. \\r\\nhttp://www.example.com or <http://www.example.com> and sometimes \\r\\nexample.com (but not on Github, for example).\\r\\n\\r\\nSome text to show that the reference links can follow later.\\r\\n\\r\\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\\r\\n[1]: http://slashdot.org\\r\\n[link text itself]: http://www.reddit.com\\r\\n```\\r\\n\\r\\n[I'm an inline-style link](https://www.google.com)\\r\\n\\r\\n[I'm an inline-style link with title](https://www.google.com \\\"Google's Homepage\\\")\\r\\n\\r\\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\\r\\n\\r\\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\\r\\n\\r\\n[You can use numbers for reference-style link definitions][1]\\r\\n\\r\\nOr leave it empty and use the [link text itself].\\r\\n\\r\\nURLs and URLs in angle brackets will automatically get turned into links. \\r\\nhttp://www.example.com or <http://www.example.com> and sometimes \\r\\nexample.com (but not on Github, for example).\\r\\n\\r\\nSome text to show that the reference links can follow later.\\r\\n\\r\\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\\r\\n[1]: http://slashdot.org\\r\\n[link text itself]: http://www.reddit.com\\r\\n\\r\\n## Images\\r\\n\\r\\n```no-highlight\\r\\nHere's our logo (hover to see the title text):\\r\\n\\r\\nInline-style: \\r\\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text 1\\\")\\r\\n\\r\\nReference-style: \\r\\n![alt text][logo]\\r\\n\\r\\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text 2\\\"\\r\\n```\\r\\n\\r\\nHere's our logo (hover to see the title text):\\r\\n\\r\\nInline-style: \\r\\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text 1\\\")\\r\\n\\r\\nReference-style: \\r\\n![alt text][logo]\\r\\n\\r\\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \\\"Logo Title Text 2\\\"\\r\\n\\r\\n## Code and Syntax Highlighting\\r\\n\\r\\nCode blocks are part of the Markdown spec, but syntax highlighting isn't. However, many renderers -- like Github's and *Markdown Here* -- support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. *Markdown Here* supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the [highlight.js demo page](http://softwaremaniacs.org/media/soft/highlight/test.html).\\r\\n\\r\\n```no-highlight\\r\\nInline `code` has `back-ticks around` it.\\r\\n```\\r\\n\\r\\nInline `code` has `back-ticks around` it.\\r\\n\\r\\nBlocks of code are either fenced by lines with three back-ticks <code>```</code>, or are indented with four spaces. I recommend only using the fenced code blocks -- they're easier and only they support syntax highlighting.\\r\\n\\r\\n<pre lang=\\\"no-highlight\\\"><code>```javascript\\r\\nvar s = \\\"JavaScript syntax highlighting\\\";\\r\\nalert(s);\\r\\n```\\r\\n \\r\\n```python\\r\\ns = \\\"Python syntax highlighting\\\"\\r\\nprint s\\r\\n```\\r\\n \\r\\n```\\r\\nNo language indicated, so no syntax highlighting. \\r\\nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\\r\\n```\\r\\n</code></pre>\\r\\n\\r\\n\\r\\n\\r\\n```javascript\\r\\nvar s = \\\"JavaScript syntax highlighting\\\";\\r\\nalert(s);\\r\\n```\\r\\n\\r\\n```python\\r\\ns = \\\"Python syntax highlighting\\\"\\r\\nprint s\\r\\n```\\r\\n\\r\\n```\\r\\nNo language indicated, so no syntax highlighting in Markdown Here (varies on Github). \\r\\nBut let's throw in a <b>tag</b>.\\r\\n```\\r\\n\\r\\n## Footnotes\\r\\n\\r\\nFootnotes aren't part of the core Markdown spec, but they [supported by GFM](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes).\\r\\n\\r\\n```no-highlight\\r\\nHere is a simple footnote[^1].\\r\\n\\r\\nA footnote can also have multiple lines[^2].  \\r\\n\\r\\nYou can also use words, to fit your writing style more closely[^note].\\r\\n\\r\\n[^1]: My reference.\\r\\n[^2]: Every new line should be prefixed with 2 spaces.  \\r\\n  This allows you to have a footnote with multiple lines.\\r\\n[^note]:\\r\\n    Named footnotes will still render with numbers instead of the text but allow easier identification and linking.  \\r\\n    This footnote also has been made with a different syntax using 4 spaces for new lines.\\r\\n```\\r\\n\\r\\nRenders to:\\r\\n\\r\\n![rendered footnotes](https://user-images.githubusercontent.com/425687/160298620-6046b90e-698c-43cb-8e00-5f5871a906ad.png)\\r\\n\\r\\n## Tables\\r\\n\\r\\nTables aren't part of the core Markdown spec, but they are part of GFM and *Markdown Here* supports them. They are an easy way of adding tables to your email -- a task that would otherwise require copy-pasting from another application.\\r\\n\\r\\n```no-highlight\\r\\nColons can be used to align columns.\\r\\n\\r\\n| Tables        | Are           | Cool  |\\r\\n| ------------- |:-------------:| -----:|\\r\\n| col 3 is      | right-aligned | $1600 |\\r\\n| col 2 is      | centered      |   $12 |\\r\\n| zebra stripes | are neat      |    $1 |\\r\\n\\r\\nThere must be at least 3 dashes separating each header cell.\\r\\nThe outer pipes (|) are optional, and you don't need to make the \\r\\nraw Markdown line up prettily. You can also use inline Markdown.\\r\\n\\r\\nMarkdown | Less | Pretty\\r\\n--- | --- | ---\\r\\n*Still* | `renders` | **nicely**\\r\\n1 | 2 | 3\\r\\n```\\r\\n\\r\\nColons can be used to align columns.\\r\\n\\r\\n| Tables        | Are           | Cool |\\r\\n| ------------- |:-------------:| -----:|\\r\\n| col 3 is      | right-aligned | $1600 |\\r\\n| col 2 is      | centered      |   $12 |\\r\\n| zebra stripes | are neat      |    $1 |\\r\\n\\r\\nThere must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.\\r\\n\\r\\nMarkdown | Less | Pretty\\r\\n--- | --- | ---\\r\\n*Still* | `renders` | **nicely**\\r\\n1 | 2 | 3\\r\\n\\r\\n## Blockquotes\\r\\n\\r\\n```no-highlight\\r\\n> Blockquotes are very handy in email to emulate reply text.\\r\\n> This line is part of the same quote.\\r\\n\\r\\nQuote break.\\r\\n\\r\\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \\r\\n```\\r\\n\\r\\n> Blockquotes are very handy in email to emulate reply text.\\r\\n> This line is part of the same quote.\\r\\n\\r\\nQuote break.\\r\\n\\r\\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \\r\\n\\r\\n## Inline HTML\\r\\n\\r\\nYou can also use raw HTML in your Markdown, and it'll mostly work pretty well. \\r\\n\\r\\n```no-highlight\\r\\n<dl>\\r\\n  <dt>Definition list</dt>\\r\\n  <dd>Is something people use sometimes.</dd>\\r\\n\\r\\n  <dt>Markdown in HTML</dt>\\r\\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\\r\\n</dl>\\r\\n```\\r\\n\\r\\n<dl>\\r\\n  <dt>Definition list</dt>\\r\\n  <dd>Is something people use sometimes.</dd>\\r\\n\\r\\n  <dt>Markdown in HTML</dt>\\r\\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\\r\\n</dl>\\r\\n\\r\\n## Horizontal Rule\\r\\n\\r\\n```\\r\\nThree or more...\\r\\n\\r\\n---\\r\\n\\r\\nHyphens\\r\\n\\r\\n***\\r\\n\\r\\nAsterisks\\r\\n\\r\\n___\\r\\n\\r\\nUnderscores\\r\\n```\\r\\n\\r\\nThree or more...\\r\\n\\r\\n---\\r\\n\\r\\nHyphens\\r\\n\\r\\n***\\r\\n\\r\\nAsterisks\\r\\n\\r\\n___\\r\\n\\r\\nUnderscores\\r\\n\\r\\n## Line Breaks\\r\\n\\r\\nMy basic recommendation for learning how line breaks work is to experiment and discover -- hit &lt;Enter&gt; once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You'll soon learn to get what you want. \\\"Markdown Toggle\\\" is your friend. \\r\\n\\r\\nHere are some things to try out:\\r\\n\\r\\n```\\r\\nHere's a line for us to start with.\\r\\n\\r\\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\\r\\n\\r\\nThis line is also a separate paragraph, but...\\r\\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\\r\\n```\\r\\n\\r\\nHere's a line for us to start with.\\r\\n\\r\\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\\r\\n\\r\\nThis line is also begins a separate paragraph, but...  \\r\\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\\r\\n\\r\\n(Technical note: *Markdown Here* uses GFM line breaks, so there's no need to use MD's two-space line breaks.)\\r\\n\\r\\n## YouTube Videos\\r\\n\\r\\nThey can't be added directly but you can add an image with a link to the video like this:\\r\\n\\r\\n```no-highlight\\r\\n<a href=\\\"http://www.youtube.com/watch?feature=player_embedded&v=YOUTUBE_VIDEO_ID_HERE\\r\\n\\\" target=\\\"_blank\\\"><img src=\\\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\\\" \\r\\nalt=\\\"IMAGE ALT TEXT HERE\\\" width=\\\"240\\\" height=\\\"180\\\" border=\\\"10\\\" /></a>\\r\\n```\\r\\n\\r\\nOr, in pure Markdown, but losing the image sizing and border:\\r\\n\\r\\n```no-highlight\\r\\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\\r\\n```\\r\\n\\r\\nReferencing a bug by #bugID in your git commit links it to the slip. For example #1. \\r\\n\\r\\n---\\r\\n\\r\\nLicense: [CC-BY](https://creativecommons.org/licenses/by/3.0/)\",\"categories\":[\"markdown\"],\"description\":\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\",\"slug\":\"/markdown-cheetsheet/paper/\"}"}}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}