{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"블로그를 시작한 이유, 개츠비?"},"fields":{"index":"{\"title\":\"블로그를 시작한 이유, 개츠비?\",\"content\":\"\\r\\n### 블로그 시작\\r\\n--- \\r\\n블로그를 시작하기로 했다. 사실 그렇게 거창한 이유가 있다거나 하지는 않다. \\r\\n\\r\\n백엔드에서 프론트로 내 개발 방향을 바꾸고 나니 걱정이 하나 생겼기 때문이다. 앞으로 내가 무엇을 보여 주어야 할지가 걱정되었다. SSAFY에서 진행한 프로젝트가 몇 가지 있지만 따로 출판하거나 하지 않았기에 걱정이 되었다. \\r\\n\\r\\n딥러닝 모델을 사용하거나 백엔드에서 해야 할 일이 많아 서버가 없다면 제대로 작동하지 않을 프론트를 보여줘야 하니 말이다. 그렇게 고민하다가 블로그를 시작하려 여러 방법을 찾아보았다.\\r\\n\\r\\n### Gatsby?\\r\\n---\\r\\n여러 가지 블로그 플랫폼이 있다. \\r\\n`티스토리` `워드프레스` `벨로그` 등 다양한 플랫폼이 있지만 어느 하나도 마음에 쏙 들지는 않았다. 간편한 기능을 통해 블로그를 만들 수 있어도 간편함 / 자유로움 이 반비례하는 덕에 제한이 꼭 있었다. \\r\\n\\r\\n그렇게 찾다 보니 github 블로그가 있지 않은가? \\r\\ngithub 블로그는 직접 개발해야 하는 블로그이다. ( 물론 템플릿을 써도 된다. 하지만 블로그마저 다른 이의 힘을 빌려 만드는 것은 자존심이 허락하지 않았다. ) 이 github.io 로 끝나는 블로그들의 프레임워크도 여러 가지가 있다.\\r\\n\\r\\n![](./20231025202018.png)\\r\\n<center>(https://www.reddit.com/r/webdev/comments/b0j9rs/infographic_gatsby_vs_hugo_vs_jekyll/)</center>\\r\\n\\r\\nRuby, Go, JavaScript 3가지 언어 선택이 가능한데... 당연히 내가 프론트로 노선을 바꾼 후 배운 것이라고는 JS뿐인 React라니 완벽했다. 나에게는 Gatsby의 압승이다. 거기에 다양한 플러그인이 있으니 싱글벙글 웃음마저 나온다.\\r\\n\\r\\n### 템플릿\\r\\n---\\r\\n![](./20231025202540.png)\\r\\n<center>(https://github.com/christiandavid/gatsby-theme-byfolio)</center>\\r\\n\\r\\n보는 바와 같이 Gatsby에도 다양한 테마 템플릿이 존재한다. 하지만 나는 결심했다. 진정한 프론트 개발자가 되어 보기로. 모든 것을 부딪쳐 가며 직접 배워보고 싶었다.\\r\\n\\r\\n![](./20231025202732.png)\\r\\n<center>(https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-hello-world)</center>\\r\\n\\r\\nGatsby에서 제공하는 `Hello world!` 테마는 정말 실행했을 때 'Hello world!' 외에는 아무것도 없다. 이 얼마나 깔끔한 템플릿이란 말인가.. 아마 내가 이때 다른 화려한 템플릿을 선택했더라면 지금만큼 Gatsby를 잘 활용하지는 못했을 것 같다. Gatsby 모든 것들을 처음부터 직접 써 내려갔으니 더욱 많은 것들이 남았다.\\r\\n\\r\\n### 마치며\\r\\n---\\r\\n다음 글 에서는 Gatsby를 활용하여 첫 페이지를 만드는 법을 알아본다.\",\"categories\":[\"gatsby\",\"diary\"],\"description\":\"블로그를 시작한 간략한 이유와 함께 왜 하필 Gatsby를 선택하였는지에 대하여\",\"slug\":\"/gatsby-my-first-blog/paper/\"}"}}},{"node":{"frontmatter":{"title":"마크업, 마크다운"},"fields":{"index":"{\"title\":\"마크업, 마크다운\",\"content\":\"\\r\\n### 인트로\\r\\n---\\r\\n프론트엔드를 공부하기 시작하면서 생긴 html에 대한 궁금증을 해결하기 위해 우선 마크업 언어가 무엇인지. 우리가 github 에서 작성하는 [README.md](http://README.md) 의 마크다운은 무엇인지 위키를 통해 알아보고자 한다.\\r\\n\\r\\n### Markup Language\\r\\n---\\r\\n> **마크업 언어**(markup 言語, markup language)는 [태그](https://ko.wikipedia.org/wiki/%ED%83%9C%EA%B7%B8_(%EC%A0%95%EB%B3%B4)) 등을 이용하여 문서나 데이터의 구조를 명기하는 언어의 한 가지이다.\\r\\n> \\r\\n> 태그는 원래 텍스트와는 별도로 원고의 교정부호와 주석을 표현하기 위한 것이었으나 용도가 점차 확장되어 문서의 구조를 표현하는 역할을 하게 되었다. 이러한 태그 방법의 체계를 마크업 언어라 한다.\\r\\n\\r\\n- **표현적 마크업**(Presentational markup): 전통적인 워드 처리 시스템이 사용하는 마크업. [위지위그](https://ko.wikipedia.org/wiki/%EC%9C%84%EC%A7%80%EC%9C%84%EA%B7%B8) 효과를 내는 문서 텍스트에 포함되니 이진 코드. 이러한 마크업은 사람(저자나 편집자도 포함)의 눈에는 보이지 않도록 설계되는 것이 일반적이다.\\r\\n- **절차적 마크업**(Procedural markup): 마크업은 텍스트에 포함되며 문자를 처리할 프로그램의 명령을 제공한다. [troff](https://ko.wikipedia.org/w/index.php?title=Troff&action=edit&redlink=1), [LaTeX](https://ko.wikipedia.org/wiki/LaTeX), [포스트스크립트](https://ko.wikipedia.org/wiki/%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8)를 예로 들 수 있다.\\r\\n- **기술적 마크업**(Descriptive markup): 마크업은 문서의 일부에 이름을 다는 데 사용된다. 예로, HTML의 인용의 이름을 다는 `<cite>`  태그를 들 수 있다.\\r\\n\\r\\n다음과 같은 예시를 볼 수 있다.\\r\\n- **HTML (Hyper Text Markup Language)**: 웹 페이지를 작성하기 위해 사용하는 가장 널리 알려진 마크업 언어. HTML은 웹 페이지의 구조를 정의하고, 텍스트, 이미지, 링크 등 다양한 요소를 웹 페이지에 배치할 수 있도록 한다.\\r\\n- **XML (eXtensible Markup Language)**: 데이터를 저장하고 전송하는 데 사용되는 마크업 언어. XML은 데이터를 구조화하는 데 사용되며, 태그는 사용자가 정의할 수 있다.\\r\\n- **SVG (Scalable Vector Graphics)**: 벡터 기반의 그래픽을 표현하기 위한 XML 기반의 마크업 언어. SVG는 웹에서 스케일링이 가능한 그래픽을 만드는 데 사용된다.\\r\\n\\r\\n### Markdown?\\r\\n--- \\r\\n> **마크다운**(Markdown)은 [일반 텍스트](https://ko.wikipedia.org/wiki/%ED%94%8C%EB%A0%88%EC%9D%B8_%ED%85%8D%EC%8A%A4%ED%8A%B8) 기반의 경량 [마크업 언어](https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EC%97%85_%EC%96%B8%EC%96%B4)다. 일반 텍스트로 서식이 있는 문서를 작성하는 데 사용되며, 일반 마크업 언어에 비해 문법이 쉽고 간단한 것이 특징이다. [HTML](https://ko.wikipedia.org/wiki/HTML)과 [리치 텍스트](https://ko.wikipedia.org/wiki/%EB%A6%AC%EC%B9%98_%ED%85%8D%EC%8A%A4%ED%8A%B8)(RTF) 등 서식 문서로 쉽게 변환되기 때문에 [응용 소프트웨어](https://ko.wikipedia.org/wiki/%EC%9D%91%EC%9A%A9_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4)와 함께 배포되는 [README 파일](https://ko.wikipedia.org/wiki/%EB%A6%AC%EB%93%9C%EB%AF%B8)이나 온라인 게시물 등에 많이 사용된다.\\r\\n\\r\\n- **읽기 쉽고 작성하기 쉽다**: 마크다운의 문법은 간단하고 직관적, 일반 텍스트를 읽고 쓰는 것처럼 쉽게 서식 있는 텍스트를 작성할 수 있다.\\r\\n- **다양한 플랫폼에서 지원한다**: GitHub, Bitbucket, GitLab 등의 코드 호스팅 플랫폼뿐만 아니라, Jekyll, Hugo 등의 정적 사이트 생성기, StackOverflow, Reddit 등의 커뮤니티 사이트에서도 마크다운을 지원한다.\\r\\n- **HTML로 쉽게 변환할 수 있다**: 마크다운 문서는 쉽게 HTML로 변환할 수 있으므로, 웹 사이트에 게시하거나 이메일로 보내는 등 다양한 용도로 사용할 수 있다.\\r\\n\\r\\n### 마치며\\r\\n---\\r\\n그렇다 이 글도 마크다운으로 작성하고 있다.\",\"categories\":[\"web\"],\"description\":\"html은 프로그래밍 언어가 아니다. 그럼 뭐란 말인가?\",\"slug\":\"/what-is-mark-up-lang/paper/\"}"}}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}